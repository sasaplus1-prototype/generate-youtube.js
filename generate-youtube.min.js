/*!
 * @license generate-youtube.js Copyright(c) 2016 sasa+1
 * https://github.com/sasaplus1-prototype/generate-youtube.js
 * Released under the MIT license.
 */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.generateYoutube=t():e.generateYoutube=t()}(this,function(){return function(e){function t(o){if(r[o])return r[o].exports;var n=r[o]={exports:{},id:o,loaded:!1};return e[o].call(n.exports,n,n.exports,t),n.loaded=!0,n.exports}var r={};return t.m=e,t.c=r,t.p="",t(0)}([function(e,t){"use strict";function r(e,t){var r,o,n,i,u,a=document.querySelectorAll(e),p=[];for(r=0,o=a.length;r<o;++r)n=a[r],i=n.querySelector('script[type="application/json"]')||{},u=JSON.parse(i.innerHTML||"{}"),u.playerVars||(u.playerVars={}),u.playerVars.origin=location.origin,u.events=t||{},p.push(new YT.Player(n.id,u));return p}function o(e){var t,r;if("function"!=typeof e){if("undefined"!=typeof Promise)return new Promise(o);throw new TypeError("callback must be a Function")}window.onYouTubeIframeAPIReady=e,t=document.createElement("script"),t.src="https://www.youtube.com/iframe_api",r=document.getElementsByTagName("script")[0],r.parentNode.insertBefore(t,r)}e.exports={generate:r,register:o}}])});